{
  "course_name": "A Practical Guide to Kubernetes - Learn Interactively",
  "course_overview": "Kubernetes is a powerful container management tool that's taking the world by storm. This detailed course will help you master it. \n\nIn this course, you'll start with the fundamentals of Kubernetes and what the main components of a cluster look like. You'll then learn how to use those components to build, test, deploy, and upgrade applications, as well as how to achieve state persistence once your application is deployed. You'll also learn how to secure your deployments and manage resources, which are crucial DevOps skills.\n\nBy the time you're done, you'll have a firm grasp on what Kubernetes is, as well as the skills to deploy your own clusters and applications with confidence.",
  "course_folder": "a practical guide to kubernetes",
  "course_lessons": [
    "0-introduction",
    "existing.txt",
    "1-a short history of infrastructure management",
    "2-a short history of deployment processes",
    "3-the schedulers",
    "4-what is kubernetes",
    "5-getting started with pods",
    "6-a quick and dirty way to run pods",
    "7-defining pods through declarative syntax",
    "8-components and stages involved in a pod s scheduling",
    "9-educative interactive courses for software d",
    "10-running multiple containers in a single pod",
    "11-single vs multi container pods",
    "12-monitoring health",
    "13-quiz yourself on pods",
    "14-what s next",
    "15-getting started with replicasets",
    "16-creating replicasets",
    "17-sequential breakdown of the process",
    "18-operating replicasets",
    "19-quiz yourself on replicasets",
    "20-what s next",
    "21-getting started with communication",
    "22-creating services by exposing ports",
    "23-sequential breakdown of the process",
    "24-creating services through declarative syntax",
    "25-splitting the pod and establishing communication through services",
    "26-creating the split api pods",
    "27-defining multiple objects in the same yaml file",
    "28-discovering services",
    "29-comparison with docker swarm",
    "30-quick quiz",
    "31-what s next",
    "32-getting started with deploying releases",
    "33-deploying new releases",
    "34-sequential breakdown of the process",
    "35-updating deployments",
    "36-defining a zero downtime deployment",
    "37-creating a zero downtime deployment",
    "38-rolling back or rolling forward",
    "39-playing around with the deployment",
    "40-rolling back failed deployments",
    "41-merging everything into the same yaml definition",
    "42-updating multiple objects",
    "43-scaling deployments",
    "44-comparison with docker swarm",
    "45-quick quiz",
    "46-what s next",
    "47-getting started with ingress",
    "48-why services are not the best fit for external access",
    "49-enabling ingress controllers",
    "50-creating ingress resources based on paths",
    "51-sequential breakdown of the process",
    "52-creating ingress resources based on domains",
    "53-creating an ingress resource with default backend",
    "54-comparison with docker swarm",
    "55-quick quiz",
    "56-what s next",
    "57-getting started with volumes",
    "58-accessing hosts resources through hostpath volumes",
    "59-running the pod after mounting hostpath",
    "60-using hostpath volume type to inject configuration files",
    "61-working with the new prometheus configuration",
    "62-non persisting state",
    "63-persisting state through the emptydir volume type",
    "64-quick quiz",
    "65-what s next",
    "66-getting started with configmaps",
    "67-injecting configuration from a single file",
    "68-injecting configurations from multiple files",
    "69-injecting configurations from key value literals",
    "70-injecting configurations from environment files",
    "71-converting configmap output into environment variables",
    "72-defining configmaps as yaml",
    "73-a plea not to use configmaps",
    "74-comparison with docker swarm",
    "75-quick quiz",
    "76-what s next",
    "77-getting started with secrets",
    "78-exploring built in secrets",
    "79-creating generic secrets",
    "80-mounting generic secrets",
    "81-secrets compared to configmaps",
    "82-not so secretive secrets",
    "83-comparison with docker swarm",
    "84-quick quiz",
    "85-what s next",
    "86-getting started with cluster division",
    "87-deploying the first release",
    "88-exploring virtual clusters",
    "89-exploring the existing namespaces",
    "90-creating a new namespace",
    "91-deploying to a new namespace",
    "92-communicating between namespaces",
    "93-deleting a namespace and all its objects",
    "94-comparison with docker swarm",
    "95-quick quiz",
    "96-what s next",
    "97-getting started with security",
    "98-accessing kubernetes api",
    "99-authorizing requests and creating a cluster",
    "100-creating users to access the cluster",
    "101-accessing the cluster as a user",
    "102-exploring rbac authorization",
    "103-peeking into pre defined cluster roles",
    "104-creating role bindings",
    "105-creating cluster role bindings",
    "106-combining role bindings with namespaces",
    "107-granting access as a release manager",
    "108-replacing users with groups",
    "109-comparison with docker swarm",
    "110-quiz yourself on securing kubernetes",
    "111-what s next",
    "112-getting started with managing resources",
    "113-defining container memory and cpu resources",
    "114-getting practical with container memory and cpu resources",
    "115-measuring the actual memory and cpu consumption",
    "116-allocating insufficient resource than the actual usage",
    "117-allocating excessive resource than the actual usage",
    "118-adjusting resources based on actual usage",
    "119-exploring quality of service qos contracts",
    "120-examining qos in action",
    "121-defining resource defaults and limitations within a namespace",
    "122-the mismatch scenario",
    "123-defining resource quotas for a namespace",
    "124-exploring the effects by violating quotas",
    "125-exploring the types of quotas",
    "126-comparison with docker swarm",
    "127-quiz yourself on managing resources",
    "128-what s next",
    "129-getting started with production ready clusters",
    "130-kubernetes operations kops project",
    "131-preparing for the cluster setup aws cli and region",
    "132-preparing for the cluster setup iam group and user",
    "133-preparing for the cluster setup availability zones and ssh keys",
    "134-creating a cluster creating s3 bucket and installing kops",
    "135-creating a cluster discussing the specifications",
    "136-creating a cluster running and verification",
    "137-exploring the components that constitute the cluster",
    "138-updating the cluster",
    "139-sequential breakdown and verification of the update process",
    "140-upgrading the cluster manually changing the kubernetes version",
    "141-exploring and verifying the output",
    "142-upgrading the cluster automatically",
    "143-accessing the cluster understanding the protocol",
    "144-accessing the cluster adding the load balancer",
    "145-deploying applications",
    "146-exploring the high availability and fault tolerance",
    "147-giving others access to the cluster",
    "148-destroying the cluster",
    "149-comparison with docker swarm",
    "150-quick quiz",
    "151-what s next",
    "152-getting started with state persistence",
    "153-deploying stateful applications without persisting state",
    "154-analyzing failure of the stateful application",
    "155-creating aws volumes",
    "156-creating kubernetes persistent volumes",
    "157-claiming persistent volumes",
    "158-creating deployment for attaching claimed volumes to pods",
    "159-verifying the state persistence and exploring the failures",
    "160-removing the resources and exploring the effects",
    "161-using storage classes to dynamically provision persistent volumes",
    "162-using default storage classes",
    "163-defining storage classes",
    "164-creating storage classes",
    "165-quick quiz",
    "166-what s next",
    "167-exploring the options",
    "168-installing kubectl",
    "169-installing minikube",
    "170-creating a local kubernetes cluster with minikube",
    "171-exploring minikube commands"
  ],
  "repo_name": "hardy-miracle"
}
